{"version":3,"sources":["components/PokemonCard/PokemonCard.module.css","components/Pokemon/Pokemon.module.css","containers/PokemonCardContainer/PokemonCardContainer.module.css","components/App/App.module.css","components/Loader/Loader.module.css","containers/MainWrapper/MainWrapper.module.css","components/PokemonCard/PokemonCard.js","components/Loader/Loader.js","containers/PokemonCardContainer/PokemonCardContainer.js","components/Evolution/Evolution.js","components/Pokemon/Pokemon.js","containers/MainWrapper/MainWrapper.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","PokemonCard","props","pokemonNumber","pokemonURL","split","length","pokemonIMG","pokemonName","charAt","toUpperCase","substring","ref","forwardRef","className","classes","test","src","alt","onClick","getCurrentScrollPositionByClick","Button","to","Loader","PokemonCardContainer","useState","scrollX","scrollY","scrollPosition","setScrollPosition","e","cordsAfterClick","forEach","cord","window","localStorage","setItem","JSON","stringify","useEffect","prevScrollPosition","parse","getItem","scrollTo","mappedPokemons","pokemons","map","pokemon","index","key","name","url","loading","lastPokemonElementRef","Title","error","ErrorConnect","Evolution","evolutionURL","evolution","a","Axios","method","then","result","console","log","data","chain","resultUPD","push","species","getEvolves","object","Array","isArray","evolves_to","resultNew","evolves","flat","elem","fetchData","style","textAlign","Pokemon","setError","setLoading","showEvolution","setShowEvolution","img","weight","height","description","genus","types","abilities","moveList","eggGroups","stats","chanceToCatch","setPokemon","pokemonNameForAPI","match","params","toLowerCase","urlPokemonAPI","urlPokemonSpeciesAPI","isMounted","getDescription","getGenus","getStats","stat","value","base_stat","genera","language","flavor_text_entries","flavor","flavor_text","get","resultPokemonAPI","dataPokemonAPI","resultPokemonSpeciesAPI","dataPokemonSpeciesAPI","sprites","front_default","Math","round","type","ability","moves","move","egg_groups","egg_group","capture_rate","evolution_chain","prev","MainWrapper","notFound","ProfileWrapper","PokemonImg","TitleProfile","PokemonName","PokemonDescr","PokemonTypes","PokemonType","PokemonAbil","join","StatsWrapper","TitleStats","statData","role","width","aria-valuenow","aria-valuemin","aria-valuemax","BtnWrapper","history","pathname","EvolvWrapper","MovesListWrapper","MovesListContent","setPokemons","currentPage","setCurrentPage","nextPage","setNextPage","hasMore","setHasMore","observer","useRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","cancel","cancelToken","CancelToken","c","res","prevPokemons","results","next","catch","isCancel","basename","exact","path","render","component","App","Fragment","wrapper","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e0b8d310.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PokemonCard\":\"PokemonCard_PokemonCard__1VIcV\",\"Button\":\"PokemonCard_Button__11oKi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainWrapper\":\"Pokemon_MainWrapper__K7a-8\",\"notFound\":\"Pokemon_notFound__3kQdJ\",\"ProfileWrapper\":\"Pokemon_ProfileWrapper__9N4XV\",\"StatsWrapper\":\"Pokemon_StatsWrapper__3dg9X\",\"BtnWrapper\":\"Pokemon_BtnWrapper__2371m\",\"EvolvWrapper\":\"Pokemon_EvolvWrapper__fhIxN\",\"MovesListWrapper\":\"Pokemon_MovesListWrapper__KPJqW\",\"TitleProfile\":\"Pokemon_TitleProfile__1nFrV\",\"TitleStats\":\"Pokemon_TitleStats__3uygG\",\"PokemonImg\":\"Pokemon_PokemonImg__3A98f\",\"MovesListContent\":\"Pokemon_MovesListContent__27k7o\",\"PokemonType\":\"Pokemon_PokemonType__1HKHr\",\"Bug\":\"Pokemon_Bug__2EYdw\",\"Dark\":\"Pokemon_Dark__1Gmrf\",\"Dragon\":\"Pokemon_Dragon__12lg5\",\"Electric\":\"Pokemon_Electric__1VBJM\",\"Fairy\":\"Pokemon_Fairy__3jPNn\",\"Fighting\":\"Pokemon_Fighting__9ZA8P\",\"Fire\":\"Pokemon_Fire__3KBGH\",\"Flying\":\"Pokemon_Flying__3IItv\",\"Ghost\":\"Pokemon_Ghost__2iQOO\",\"Grass\":\"Pokemon_Grass__25xta\",\"Ground\":\"Pokemon_Ground__3TdDc\",\"Ice\":\"Pokemon_Ice__2yoHR\",\"Normal\":\"Pokemon_Normal__1C1f7\",\"Poison\":\"Pokemon_Poison__2O1Ai\",\"Psychic\":\"Pokemon_Psychic__1agvU\",\"Rock\":\"Pokemon_Rock__2uTgA\",\"Steel\":\"Pokemon_Steel__3o834\",\"Water\":\"Pokemon_Water__2Jd10\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"PokemonCardContainer_Title__2Jbck\",\"ErrorConnect\":\"PokemonCardContainer_ErrorConnect__3uJ3j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3ox-V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__17sQZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"MainWrapper_notFound__2_IpN\"};","import React from \"react\";\nimport classes from \"./PokemonCard.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst PokemonCard = (props) => {\n  /* States */\n  const pokemonNumber = props.pokemonURL.split(\"/\")[\n    props.pokemonURL.split(\"/\").length - 2\n  ];\n  const pokemonIMG = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonNumber}.png`;\n  const pokemonName =\n    props.pokemonName.charAt(0).toUpperCase() + props.pokemonName.substring(1);\n  /* ****** */\n\n  /* Render */\n  return (\n    <div ref={props.forwardRef} className={`${classes.PokemonCard}`}>\n      <div className=\"justify-content-between d-flex align-items-center flex-column flex-md-row\">\n        <div>{pokemonNumber}.&nbsp;</div>\n        <div className={classes.test}>{pokemonName}</div>\n        <div>\n          <img src={pokemonIMG} alt={pokemonName} />\n        </div>\n        <Link\n          onClick={props.getCurrentScrollPositionByClick}\n          className={classes.Button}\n          to={`pokemon/${pokemonName}`}\n        >\n          {pokemonName}, I Choose You!\n        </Link>\n      </div>\n    </div>\n  );\n  /* ***** */\n};\n\nexport default PokemonCard;\n","import React from \"react\";\nimport classes from \"./Loader.module.css\";\n\nconst Loader = () => {\n  return <div className={`${classes.Loader}`}></div>;\n};\n\nexport default Loader;\n","import React, { useEffect, useState } from \"react\";\nimport classes from \"./PokemonCardContainer.module.css\";\nimport PokemonCard from \"../../components/PokemonCard/PokemonCard\";\nimport Loader from \"../../components/Loader/Loader\";\n\nconst PokemonCardContainer = (props) => {\n  /* States */\n  const [scrollPosition, setScrollPosition] = useState({\n    scrollX: 0,\n    scrollY: 0,\n  });\n  /* ****** */\n\n  /* Logic */\n  const getCurrentScrollPositionByClick = (e) => {\n    let cordsAfterClick = {};\n    let cords = [\"scrollX\", \"scrollY\"];\n    cords.forEach((cord) => {\n      cordsAfterClick[cord] = window[cord];\n    });\n    localStorage.setItem(\"scrollCords\", JSON.stringify(cordsAfterClick));\n  };\n\n  useEffect(() => {\n    setScrollPosition((prevScrollPosition) => {\n      return {\n        ...prevScrollPosition,\n        ...JSON.parse(window.localStorage.getItem(\"scrollCords\")),\n      };\n    });\n    window.scrollTo(scrollPosition.scrollX, scrollPosition.scrollY);\n  }, [scrollPosition.scrollX, scrollPosition.scrollY]);\n\n  const mappedPokemons = props.pokemons.map((pokemon, index) => (\n    <PokemonCard\n      getCurrentScrollPositionByClick={getCurrentScrollPositionByClick}\n      key={index}\n      pokemonName={pokemon.name}\n      pokemonURL={pokemon.url}\n      loading={props.loading}\n      forwardRef={\n        props.pokemons.length === index + 1 ? props.lastPokemonElementRef : null\n      }\n    />\n  ));\n  /* ******* */\n\n  /* Render */\n  return (\n    <>\n      <div className={classes.Title}>\n        <h1>Who is that Pokemon?</h1>\n      </div>\n      <div className=\" d-flex justify-content-center\">\n        {props.error ? (\n          <h1 className={classes.ErrorConnect}>Could not connect to server</h1>\n        ) : props.loading ? (\n          <Loader />\n        ) : null}\n      </div>\n      {mappedPokemons}\n    </>\n  );\n  /* ***** */\n};\n\nexport default PokemonCardContainer;\n","import React, { useEffect, useState } from \"react\";\nimport classes from \"./Evolution.module.css\";\nimport Axios from \"axios\";\n\nconst Evolution = (props) => {\n  const evolutionURL = props.evolution;\n  const [evolutionChain, setEvolutionChain] = useState([\n    [\n      {\n        name: \"\",\n        url: \"\",\n      },\n    ],\n    [\n      {\n        name: \"\",\n        url: \"\",\n      },\n      {\n        name: \"\",\n        url: \"\",\n      },\n    ][\n      {\n        name: \"\",\n        url: \"\",\n      }\n    ],\n  ]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await Axios({\n        method: \"GET\",\n        url: evolutionURL,\n      }).then((result) => {\n        console.log(\"--------------\");\n        console.log(\"массив для обхода - \", result.data.chain);\n        console.log(\"--------------\");\n\n        let resultUPD = [];\n        resultUPD.push([result.data.chain.species]);\n        const getEvolves = (object) => {\n          if (Array.isArray(object.evolves_to) && !object.evolves_to.length) {\n            return object.evolves_to;\n          }\n          const resultNew = object.evolves_to.map((evolves) =>\n            getEvolves(evolves)\n          );\n          return [...object.evolves_to, ...resultNew].flat();\n        };\n        getEvolves(result.data.chain).map((elem) =>\n          resultUPD.push([elem.species])\n        );\n        console.log(\"result\", resultUPD);\n      });\n    };\n    fetchData();\n  }, [evolutionURL]);\n\n  return (\n    <div>\n      <h1 style={{ textAlign: \"center\" }}>Coming soon</h1>\n    </div>\n  );\n};\n\nexport default Evolution;\n","import React, { useEffect, useState } from \"react\";\nimport classes from \"./Pokemon.module.css\";\nimport Axios from \"axios\";\nimport Evolution from \"../Evolution/Evolution\";\nimport Loader from \"../Loader/Loader\";\n\nconst Pokemon = (props) => {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const [showEvolution, setShowEvolution] = useState(false);\n  const [pokemon, setPokemon] = useState({\n    img: \"\",\n    name: \"\",\n    weight: \"\",\n    height: \"\",\n    description: \"\",\n    genus: \"\",\n    types: [],\n    abilities: [],\n    moveList: [],\n    eggGroups: [],\n    stats: [],\n    chanceToCatch: \"\",\n    evolutionURL: \"\",\n  });\n\n  const pokemonNameForAPI = props.match.params.pokemonName.toLowerCase();\n  const urlPokemonAPI = `https://pokeapi.co/api/v2/pokemon/${pokemonNameForAPI}/`;\n  const urlPokemonSpeciesAPI = `https://pokeapi.co/api/v2/pokemon-species/${pokemonNameForAPI}/`;\n\n  const handleGoToHomePage = () => {\n    props.history.push({\n      pathname: \"/\",\n    });\n  };\n  const handleShowEvolution = () => {\n    setShowEvolution(!showEvolution);\n    console.log(showEvolution);\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const resultPokemonAPI = await Axios.get(urlPokemonAPI);\n        const dataPokemonAPI = resultPokemonAPI.data;\n        const resultPokemonSpeciesAPI = await Axios.get(urlPokemonSpeciesAPI);\n        const dataPokemonSpeciesAPI = resultPokemonSpeciesAPI.data;\n\n        const img = dataPokemonAPI.sprites.front_default;\n        const name =\n          dataPokemonAPI.name.charAt(0).toUpperCase() +\n          dataPokemonAPI.name.substring(1);\n        const weight = Math.round(dataPokemonAPI.weight / 10); // hectograms->kilogram\n        const height = dataPokemonAPI.height / 10; // decimeters->meters\n        function getDescription(data) {\n          let result = \"\";\n          data.flavor_text_entries.forEach((flavor) => {\n            if (flavor.language.name === \"en\") {\n              result = flavor.flavor_text;\n            }\n          });\n          return result;\n        }\n        const description = getDescription(dataPokemonSpeciesAPI);\n        function getGenus(data) {\n          let result = \"\";\n          data.genera.forEach((genera) => {\n            if (genera.language.name === \"en\") {\n              result = genera.genus;\n            }\n          });\n          return result;\n        }\n        const genus = getGenus(dataPokemonSpeciesAPI);\n        const types = dataPokemonAPI.types.map(\n          (type) =>\n            type.type.name.charAt(0).toUpperCase() + type.type.name.substring(1)\n        );\n        const abilities = dataPokemonAPI.abilities.map(\n          (ability) =>\n            ability.ability.name.charAt(0).toUpperCase() +\n            ability.ability.name.substring(1)\n        );\n        const moveList = dataPokemonAPI.moves.map((move) => move.move.name);\n        function getStats(data) {\n          const result = [];\n          data.stats.map((stat) => {\n            result.push({ name: stat.stat.name, value: stat.base_stat });\n          });\n          return result;\n        }\n        const stats = getStats(dataPokemonAPI);\n        const eggGroups = dataPokemonSpeciesAPI.egg_groups.map(\n          (egg_group) =>\n            egg_group.name.charAt(0).toUpperCase() + egg_group.name.substring(1)\n        );\n        const chanceToCatch = Math.round(\n          (dataPokemonSpeciesAPI.capture_rate * 100) / 255 // 255/100=dataPokemonSpeciesAPI.capture_rate/x\n        );\n        const evolutionURL = dataPokemonSpeciesAPI.evolution_chain.url;\n        /* ****** */\n\n        /* update State */\n        if (isMounted) {\n          setPokemon((prev) => {\n            return {\n              ...prev,\n              img: img,\n              name: name,\n              weight: weight,\n              height: height,\n              description: description,\n              genus: genus,\n              types: types,\n              abilities: abilities,\n              moveList: moveList,\n              eggGroups: eggGroups,\n              stats: stats,\n              chanceToCatch: chanceToCatch,\n              evolutionURL: evolutionURL,\n            };\n          });\n        }\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n        console.log(error);\n      }\n    };\n    fetchData();\n    return () => {\n      isMounted = false;\n    };\n  }, [urlPokemonAPI, urlPokemonSpeciesAPI]);\n  console.log(pokemon);\n\n  return (\n    <div className={classes.MainWrapper}>\n      {error ? (\n        <h1 className={classes.notFound}>Not Found</h1>\n      ) : loading ? (\n        <div className=\"d-flex justify-content-center\">\n          <Loader />\n        </div>\n      ) : (\n        <>\n          <div className={classes.ProfileWrapper}>\n            <div className=\"row d-flex justify-content-between align-content-center align-items-center\">\n              <div className=\"col-xl-3\">\n                <div className={classes.PokemonImg}>\n                  <img src={pokemon.img} alt={pokemon.name} />\n                </div>\n              </div>\n              <div className=\"col-xl-9\">\n                <div className=\"d-flex flex-column align-self-center\">\n                  <div className={classes.TitleProfile}>\n                    <h3>Profile</h3>\n                  </div>\n                  <div className={classes.PokemonName}>\n                    <p>\n                      <strong>Name:</strong> {pokemon.name}\n                    </p>\n                  </div>\n                  <div className={classes.PokemonDescr}>\n                    <p>\n                      <strong>Description:</strong> {pokemon.description}\n                    </p>\n                  </div>\n                  <div className={classes.PokemonTypes}>\n                    <p>\n                      <strong>Type:</strong> &nbsp;\n                      {pokemon.types.map((type, index) => {\n                        return (\n                          <span\n                            key={index}\n                            className={`${classes.PokemonType} ${classes[type]}`}\n                          >\n                            {type}\n                          </span>\n                        );\n                      })}\n                    </p>\n                  </div>\n                  <div className={classes.PokemonAbil}>\n                    <p>\n                      <strong>Abilities:</strong> {pokemon.abilities.join(\", \")}\n                    </p>\n                  </div>\n                  <div>\n                    <p>\n                      <strong>Egg Group:</strong> {pokemon.eggGroups.join(\", \")}\n                    </p>\n                  </div>\n                  <div>\n                    <p>\n                      <strong>Weight:</strong> {pokemon.weight}, kg\n                    </p>\n                  </div>\n                  <div>\n                    <p>\n                      <strong>Height:</strong> {pokemon.height}, m\n                    </p>\n                  </div>\n                  <div>\n                    <p>\n                      <strong>Genus:</strong> {pokemon.genus}\n                    </p>\n                  </div>\n                  <div>\n                    <p>\n                      <strong>Chance to Catch:</strong> {pokemon.chanceToCatch},\n                      %\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes.StatsWrapper}>\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className={classes.TitleStats}>\n                  <h3>Stats</h3>\n                  {pokemon.stats.map((statData, index) => {\n                    return (\n                      <div key={index} className=\"row align-items-center\">\n                        <div className=\"col-12 col-xl-3\">{statData.name}</div>\n                        <div className=\"col-12 col-xl-9\">\n                          <div className=\"progress\">\n                            <div\n                              className=\"progress-bar\"\n                              role=\"progressbar\"\n                              style={{ width: `${statData.value}%` }}\n                              aria-valuenow=\"25\"\n                              aria-valuemin=\"0\"\n                              aria-valuemax=\"100\"\n                            >\n                              <small>{statData.value}</small>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes.BtnWrapper}>\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <button onClick={handleShowEvolution}>Evolution</button>\n                <button onClick={handleGoToHomePage}>Back</button>\n              </div>\n            </div>\n          </div>\n          <div className={classes.EvolvWrapper}>\n            <div className=\"row\">\n              <div className=\"col-12\">\n                {showEvolution ? (\n                  <Evolution evolution={pokemon.evolutionURL} />\n                ) : null}\n              </div>\n            </div>\n          </div>\n          <div className={classes.MovesListWrapper}>\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className={`d-flex flex-wrap ${classes.MovesListContent}`}>\n                  <h3>Moves list</h3>\n                  {pokemon.moveList.map((move, index) => {\n                    return <span key={index}>{move} </span>;\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Pokemon;\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport PokemonCardContainer from \"../../containers/PokemonCardContainer/PokemonCardContainer\";\nimport Pokemon from \"../../components/Pokemon/Pokemon\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport classes from \"./MainWrapper.module.css\";\nimport Axios from \"axios\";\n// import logger from \"react-logger\";\n\nconst MainWrapper = (props) => {\n  /* States */\n  const [pokemons, setPokemons] = useState([]); // состояние для покемонов\n  const [loading, setLoading] = useState(true); // начальное состояние загрузки покемонов\n  const [error, setError] = useState(false); // начальное состояние ошибки\n  const [currentPage, setCurrentPage] = useState(\n    \"https://pokeapi.co/api/v2/pokemon\"\n  );\n  const [nextPage, setNextPage] = useState(\"\");\n  const [hasMore, setHasMore] = useState(false);\n  /* ****** */\n  console.log(pokemons);\n  /* Logic */\n  const observer = useRef();\n  const lastPokemonElementRef = useCallback(\n    (node) => {\n      if (loading) return;\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && hasMore) {\n          setCurrentPage(nextPage);\n        }\n      });\n      if (node) observer.current.observe(node);\n    },\n    [hasMore, loading, nextPage]\n  );\n\n  useEffect(() => {\n    let cancel;\n    const fetchData = () => {\n      setLoading(true);\n      setError(false);\n      Axios({\n        method: \"GET\",\n        url: currentPage,\n        cancelToken: new Axios.CancelToken((c) => (cancel = c)),\n      })\n        .then((res) => {\n          setPokemons((prevPokemons) => {\n            return [...prevPokemons, ...res.data.results];\n          });\n          setNextPage(res.data.next);\n          setHasMore(res.data.results.length > 0);\n          setLoading(false);\n        })\n        .catch((error) => {\n          if (Axios.isCancel(error)) return;\n          setError(true);\n        });\n    };\n    fetchData();\n    return () => cancel();\n  }, [currentPage]);\n  /* ******* */\n\n  /* Render */\n  return (\n    <HashRouter basename=\"/\">\n      <Route\n        exact\n        path=\"/\"\n        render={(props) => (\n          <PokemonCardContainer\n            pokemons={pokemons}\n            loading={loading}\n            error={error}\n            lastPokemonElementRef={lastPokemonElementRef}\n          />\n        )}\n      />\n      <Route path=\"/pokemon/:pokemonName\" component={Pokemon} />\n      <Route render={() => <h1 className={classes.notFound}> Not Found</h1>} />\n    </HashRouter>\n  );\n  /* ***** */\n};\n\nexport default MainWrapper;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"normalize.css/normalize.css\";\nimport classes from \"./App.module.css\";\nimport \"pokemon-font/css/pokemon-font.css\";\nimport MainWrapper from \"../../containers/MainWrapper/MainWrapper\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <React.Fragment>\n        <div className={classes.wrapper}>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <MainWrapper />\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}